//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// The FileWatcherConfigSection Configuration Section.
    /// </summary>
    public partial class FileWatcherConfigSection : global::System.Configuration.ConfigurationSection
    {
        
        #region Singleton Instance
        /// <summary>
        /// The XML name of the FileWatcherConfigSection Configuration Section.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string FileWatcherConfigSectionSectionName = "fileWatcherConfigSection";
        
        /// <summary>
        /// Gets the FileWatcherConfigSection instance.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public static global::CarbonKnown.FileWatcherService.FileWatcherConfigSection Instance
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.FileWatcherConfigSection)(global::System.Configuration.ConfigurationManager.GetSection(global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.FileWatcherConfigSectionSectionName)));
            }
        }
        #endregion
        
        #region Xmlns Property
        /// <summary>
        /// The XML name of the <see cref="Xmlns"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string XmlnsPropertyName = "xmlns";
        
        /// <summary>
        /// Gets the XML namespace of this Configuration Section.
        /// </summary>
        /// <remarks>
        /// This property makes sure that if the configuration file contains the XML namespace,
        /// the parser doesn't throw an exception because it encounters the unknown "xmlns" attribute.
        /// </remarks>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.XmlnsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public string Xmlns
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.XmlnsPropertyName]));
            }
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region FileHandlers Property
        /// <summary>
        /// The XML name of the <see cref="FileHandlers"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string FileHandlersPropertyName = "fileHandlers";
        
        /// <summary>
        /// Gets or sets the FileHandlers.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The FileHandlers.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.FileHandlersPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=true)]
        public virtual global::CarbonKnown.FileWatcherService.HandlerCollection FileHandlers
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.HandlerCollection)(base[global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.FileHandlersPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.FileHandlersPropertyName] = value;
            }
        }
        #endregion
        
        #region HandlerGroups Property
        /// <summary>
        /// The XML name of the <see cref="HandlerGroups"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HandlerGroupsPropertyName = "handlerGroups";
        
        /// <summary>
        /// Gets or sets the HandlerGroups.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The HandlerGroups.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.HandlerGroupsPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CarbonKnown.FileWatcherService.HandlerGroupCollection HandlerGroups
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.HandlerGroupCollection)(base[global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.HandlerGroupsPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.HandlerGroupsPropertyName] = value;
            }
        }
        #endregion
        
        #region GroupInstances Property
        /// <summary>
        /// The XML name of the <see cref="GroupInstances"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string GroupInstancesPropertyName = "groupInstances";
        
        /// <summary>
        /// Gets or sets the GroupInstances.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The GroupInstances.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.GroupInstancesPropertyName, IsRequired=false, IsKey=false, IsDefaultCollection=false)]
        public virtual global::CarbonKnown.FileWatcherService.GroupInstanceCollection GroupInstances
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.GroupInstanceCollection)(base[global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.GroupInstancesPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.FileWatcherConfigSection.GroupInstancesPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// A collection of HandlerElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CarbonKnown.FileWatcherService.HandlerElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CarbonKnown.FileWatcherService.HandlerCollection.HandlerElementPropertyName)]
    public partial class HandlerCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HandlerElementPropertyName = "handlerCollection";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::CarbonKnown.FileWatcherService.HandlerCollection.HandlerElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CarbonKnown.FileWatcherService.HandlerCollection.HandlerElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CarbonKnown.FileWatcherService.HandlerElement)(element)).Folder;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CarbonKnown.FileWatcherService.HandlerElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerElement this[int index]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.HandlerElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> with the specified key.
        /// </summary>
        /// <param name="folder">The key of the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerElement this[object folder]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.HandlerElement)(base.BaseGet(folder)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handlerCollection">The <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::CarbonKnown.FileWatcherService.HandlerElement handlerCollection)
        {
            base.BaseAdd(handlerCollection);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handlerCollection">The <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::CarbonKnown.FileWatcherService.HandlerElement handlerCollection)
        {
            base.BaseRemove(this.GetElementKey(handlerCollection));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerElement GetItemAt(int index)
        {
            return ((global::CarbonKnown.FileWatcherService.HandlerElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> with the specified key.
        /// </summary>
        /// <param name="folder">The key of the <see cref="global::CarbonKnown.FileWatcherService.HandlerElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerElement GetItemByKey(string folder)
        {
            return ((global::CarbonKnown.FileWatcherService.HandlerElement)(base.BaseGet(((object)(folder)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// The HandlerElement Configuration Element.
    /// </summary>
    public partial class HandlerElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Folder Property
        /// <summary>
        /// The XML name of the <see cref="Folder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string FolderPropertyName = "folder";
        
        /// <summary>
        /// Gets or sets the Folder.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Folder.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.HandlerElement.FolderPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Folder
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.HandlerElement.FolderPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.HandlerElement.FolderPropertyName] = value;
            }
        }
        #endregion
        
        #region HandlerName Property
        /// <summary>
        /// The XML name of the <see cref="HandlerName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HandlerNamePropertyName = "handlerName";
        
        /// <summary>
        /// Gets or sets the HandlerName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The HandlerName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.HandlerElement.HandlerNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string HandlerName
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.HandlerElement.HandlerNamePropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.HandlerElement.HandlerNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.HandlerElement.HostPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.HandlerElement.HostPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.HandlerElement.HostPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// A collection of GroupElement instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CarbonKnown.FileWatcherService.GroupElement), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CarbonKnown.FileWatcherService.HandlerGroup.GroupElementPropertyName)]
    public partial class HandlerGroup : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string GroupElementPropertyName = "handler";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::CarbonKnown.FileWatcherService.HandlerGroup.GroupElementPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CarbonKnown.FileWatcherService.HandlerGroup.GroupElementPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CarbonKnown.FileWatcherService.GroupElement)(element)).RelativeFolder;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CarbonKnown.FileWatcherService.GroupElement();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupElement this[int index]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.GroupElement)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> with the specified key.
        /// </summary>
        /// <param name="relativeFolder">The key of the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupElement this[object relativeFolder]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.GroupElement)(base.BaseGet(relativeFolder)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handler">The <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::CarbonKnown.FileWatcherService.GroupElement handler)
        {
            base.BaseAdd(handler);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handler">The <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::CarbonKnown.FileWatcherService.GroupElement handler)
        {
            base.BaseRemove(this.GetElementKey(handler));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupElement GetItemAt(int index)
        {
            return ((global::CarbonKnown.FileWatcherService.GroupElement)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> with the specified key.
        /// </summary>
        /// <param name="relativeFolder">The key of the <see cref="global::CarbonKnown.FileWatcherService.GroupElement"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupElement GetItemByKey(string relativeFolder)
        {
            return ((global::CarbonKnown.FileWatcherService.GroupElement)(base.BaseGet(((object)(relativeFolder)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region Name Property
        /// <summary>
        /// The XML name of the <see cref="Name"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string NamePropertyName = "name";
        
        /// <summary>
        /// Gets or sets the Name.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Name.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.HandlerGroup.NamePropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string Name
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.HandlerGroup.NamePropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.HandlerGroup.NamePropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// The GroupElement Configuration Element.
    /// </summary>
    public partial class GroupElement : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region HandlerName Property
        /// <summary>
        /// The XML name of the <see cref="HandlerName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HandlerNamePropertyName = "handlerName";
        
        /// <summary>
        /// Gets or sets the HandlerName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The HandlerName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.GroupElement.HandlerNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string HandlerName
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.GroupElement.HandlerNamePropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.GroupElement.HandlerNamePropertyName] = value;
            }
        }
        #endregion
        
        #region RelativeFolder Property
        /// <summary>
        /// The XML name of the <see cref="RelativeFolder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string RelativeFolderPropertyName = "relativeFolder";
        
        /// <summary>
        /// Gets or sets the RelativeFolder.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The RelativeFolder.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.GroupElement.RelativeFolderPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string RelativeFolder
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.GroupElement.RelativeFolderPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.GroupElement.RelativeFolderPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// A collection of GroupInstance instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CarbonKnown.FileWatcherService.GroupInstance), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CarbonKnown.FileWatcherService.GroupInstanceCollection.GroupInstancePropertyName)]
    public partial class GroupInstanceCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string GroupInstancePropertyName = "groupInstance";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::CarbonKnown.FileWatcherService.GroupInstanceCollection.GroupInstancePropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CarbonKnown.FileWatcherService.GroupInstanceCollection.GroupInstancePropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CarbonKnown.FileWatcherService.GroupInstance)(element)).BaseFolder;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CarbonKnown.FileWatcherService.GroupInstance();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupInstance this[int index]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.GroupInstance)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> with the specified key.
        /// </summary>
        /// <param name="baseFolder">The key of the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupInstance this[object baseFolder]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.GroupInstance)(base.BaseGet(baseFolder)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="groupInstance">The <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::CarbonKnown.FileWatcherService.GroupInstance groupInstance)
        {
            base.BaseAdd(groupInstance);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="groupInstance">The <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::CarbonKnown.FileWatcherService.GroupInstance groupInstance)
        {
            base.BaseRemove(this.GetElementKey(groupInstance));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupInstance GetItemAt(int index)
        {
            return ((global::CarbonKnown.FileWatcherService.GroupInstance)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> with the specified key.
        /// </summary>
        /// <param name="baseFolder">The key of the <see cref="global::CarbonKnown.FileWatcherService.GroupInstance"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.GroupInstance GetItemByKey(string baseFolder)
        {
            return ((global::CarbonKnown.FileWatcherService.GroupInstance)(base.BaseGet(((object)(baseFolder)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// The GroupInstance Configuration Element.
    /// </summary>
    public partial class GroupInstance : global::System.Configuration.ConfigurationElement
    {
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
        
        #region BaseFolder Property
        /// <summary>
        /// The XML name of the <see cref="BaseFolder"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string BaseFolderPropertyName = "baseFolder";
        
        /// <summary>
        /// Gets or sets the BaseFolder.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The BaseFolder.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.GroupInstance.BaseFolderPropertyName, IsRequired=true, IsKey=true, IsDefaultCollection=false)]
        public virtual string BaseFolder
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.GroupInstance.BaseFolderPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.GroupInstance.BaseFolderPropertyName] = value;
            }
        }
        #endregion
        
        #region GroupName Property
        /// <summary>
        /// The XML name of the <see cref="GroupName"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string GroupNamePropertyName = "groupName";
        
        /// <summary>
        /// Gets or sets the GroupName.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The GroupName.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.GroupInstance.GroupNamePropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string GroupName
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.GroupInstance.GroupNamePropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.GroupInstance.GroupNamePropertyName] = value;
            }
        }
        #endregion
        
        #region Host Property
        /// <summary>
        /// The XML name of the <see cref="Host"/> property.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HostPropertyName = "host";
        
        /// <summary>
        /// Gets or sets the Host.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        [global::System.ComponentModel.DescriptionAttribute("The Host.")]
        [global::System.Configuration.ConfigurationPropertyAttribute(global::CarbonKnown.FileWatcherService.GroupInstance.HostPropertyName, IsRequired=true, IsKey=false, IsDefaultCollection=false)]
        public virtual string Host
        {
            get
            {
                return ((string)(base[global::CarbonKnown.FileWatcherService.GroupInstance.HostPropertyName]));
            }
            set
            {
                base[global::CarbonKnown.FileWatcherService.GroupInstance.HostPropertyName] = value;
            }
        }
        #endregion
    }
}
namespace CarbonKnown.FileWatcherService
{
    
    
    /// <summary>
    /// A collection of HandlerGroup instances.
    /// </summary>
    [global::System.Configuration.ConfigurationCollectionAttribute(typeof(global::CarbonKnown.FileWatcherService.HandlerGroup), CollectionType=global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate, AddItemName=global::CarbonKnown.FileWatcherService.HandlerGroupCollection.HandlerGroupPropertyName)]
    public partial class HandlerGroupCollection : global::System.Configuration.ConfigurationElementCollection
    {
        
        #region Constants
        /// <summary>
        /// The XML name of the individual <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> instances in this collection.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        internal const string HandlerGroupPropertyName = "handlerGroup";
        #endregion
        
        #region Overrides
        /// <summary>
        /// Gets the type of the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <returns>The <see cref="global::System.Configuration.ConfigurationElementCollectionType"/> of this collection.</returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override global::System.Configuration.ConfigurationElementCollectionType CollectionType
        {
            get
            {
                return global::System.Configuration.ConfigurationElementCollectionType.BasicMapAlternate;
            }
        }
        
        /// <summary>
        /// Gets the name used to identify this collection of elements
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override string ElementName
        {
            get
            {
                return global::CarbonKnown.FileWatcherService.HandlerGroupCollection.HandlerGroupPropertyName;
            }
        }
        
        /// <summary>
        /// Indicates whether the specified <see cref="global::System.Configuration.ConfigurationElement"/> exists in the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="elementName">The name of the element to verify.</param>
        /// <returns>
        /// <see langword="true"/> if the element exists in the collection; otherwise, <see langword="false"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override bool IsElementName(string elementName)
        {
            return (elementName == global::CarbonKnown.FileWatcherService.HandlerGroupCollection.HandlerGroupPropertyName);
        }
        
        /// <summary>
        /// Gets the element key for the specified configuration element.
        /// </summary>
        /// <param name="element">The <see cref="global::System.Configuration.ConfigurationElement"/> to return the key for.</param>
        /// <returns>
        /// An <see cref="object"/> that acts as the key for the specified <see cref="global::System.Configuration.ConfigurationElement"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override object GetElementKey(global::System.Configuration.ConfigurationElement element)
        {
            return ((global::CarbonKnown.FileWatcherService.HandlerGroup)(element)).Name;
        }
        
        /// <summary>
        /// Creates a new <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/>.
        /// </summary>
        /// <returns>
        /// A new <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/>.
        /// </returns>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        protected override global::System.Configuration.ConfigurationElement CreateNewElement()
        {
            return new global::CarbonKnown.FileWatcherService.HandlerGroup();
        }
        #endregion
        
        #region Indexer
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerGroup this[int index]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.HandlerGroup)(base.BaseGet(index)));
            }
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerGroup this[object name]
        {
            get
            {
                return ((global::CarbonKnown.FileWatcherService.HandlerGroup)(base.BaseGet(name)));
            }
        }
        #endregion
        
        #region Add
        /// <summary>
        /// Adds the specified <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> to the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handlerGroup">The <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> to add.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Add(global::CarbonKnown.FileWatcherService.HandlerGroup handlerGroup)
        {
            base.BaseAdd(handlerGroup);
        }
        #endregion
        
        #region Remove
        /// <summary>
        /// Removes the specified <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> from the <see cref="global::System.Configuration.ConfigurationElementCollection"/>.
        /// </summary>
        /// <param name="handlerGroup">The <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> to remove.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public void Remove(global::CarbonKnown.FileWatcherService.HandlerGroup handlerGroup)
        {
            base.BaseRemove(this.GetElementKey(handlerGroup));
        }
        #endregion
        
        #region GetItem
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> at the specified index.
        /// </summary>
        /// <param name="index">The index of the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerGroup GetItemAt(int index)
        {
            return ((global::CarbonKnown.FileWatcherService.HandlerGroup)(base.BaseGet(index)));
        }
        
        /// <summary>
        /// Gets the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> with the specified key.
        /// </summary>
        /// <param name="name">The key of the <see cref="global::CarbonKnown.FileWatcherService.HandlerGroup"/> to retrieve.</param>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public global::CarbonKnown.FileWatcherService.HandlerGroup GetItemByKey(string name)
        {
            return ((global::CarbonKnown.FileWatcherService.HandlerGroup)(base.BaseGet(((object)(name)))));
        }
        #endregion
        
        #region IsReadOnly override
        /// <summary>
        /// Gets a value indicating whether the element is read-only.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("ConfigurationSectionDesigner.CsdFileGenerator", "2.0.1.0")]
        public override bool IsReadOnly()
        {
            return false;
        }
        #endregion
    }
}
