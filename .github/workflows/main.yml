# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1.1
      - name: Setup NuGet.exe for use with actions
        # You may pin to the exact commit or the version.
        # uses: NuGet/setup-nuget@b2bc17b761a1d88cab755a776c7922eb26eefbfa
        uses: NuGet/setup-nuget@v1.0.6
      - name: Build with msBuild
        shell: pwsh
        run: |
          msbuild ./CarbonKnown.MVC.sln -p:NuGetExePath=$Env:NUGET /p:Configuration=Release  /p:TargetFrameworkVersion=v4.8
          Compress-Archive -Path "$Env:GITHUB_WORKSPACE/CarbonKnown.MVC/bin" -DestinationPath "$Env:GITHUB_WORKSPACE/CarbonKnown.MVC.zip"
          dir env:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.run.id }}
          release_name: Release ${{ github.run.id }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./CarbonKnown.MVC.zip
          asset_name: CarbonKnown.MVC.zip
          asset_content_type: application/zip
