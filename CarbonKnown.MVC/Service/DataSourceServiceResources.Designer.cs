//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarbonKnown.MVC.Service {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class DataSourceServiceResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal DataSourceServiceResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CarbonKnown.MVC.Service.DataSourceServiceResources", typeof(DataSourceServiceResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Calculation for the entry was not found.
        /// </summary>
        public static string CalculationNotFound {
            get {
                return ResourceManager.GetString("CalculationNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A duplicate file has already been  uploaded..
        /// </summary>
        public static string DuplicateFile {
            get {
                return ResourceManager.GetString("DuplicateFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An Exception occured during the calculation of emmissions.
        /// </summary>
        public static string ExceptionOccuredDuringCalculation {
            get {
                return ResourceManager.GetString("ExceptionOccuredDuringCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source must have the status of Calculated in order to complete operation.
        /// </summary>
        public static string FileSourceIsNotCalculated {
            get {
                return ResourceManager.GetString("FileSourceIsNotCalculated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source must have the status of Calculating in order to complete operation.
        /// </summary>
        public static string FileSourceIsNotCalculating {
            get {
                return ResourceManager.GetString("FileSourceIsNotCalculating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source must have the status of Extracting in order to complete operation.
        /// </summary>
        public static string FileSourceIsNotExtracting {
            get {
                return ResourceManager.GetString("FileSourceIsNotExtracting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source must have the status of Pending Calculation in order to complete operation.
        /// </summary>
        public static string FileSourceIsNotPendingCalculation {
            get {
                return ResourceManager.GetString("FileSourceIsNotPendingCalculation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source must have the status of Pending Extraction in order to complete operation.
        /// </summary>
        public static string FileSourceIsNotPendingExtraction {
            get {
                return ResourceManager.GetString("FileSourceIsNotPendingExtraction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Handler {0} was not configured. Operation has aborted.
        /// </summary>
        public static string InvalidHandlerMessage {
            get {
                return ResourceManager.GetString("InvalidHandlerMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Field {0} was not found acceptable field names are {1}.
        /// </summary>
        public static string MissingRowsMessage {
            get {
                return ResourceManager.GetString("MissingRowsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source has entries that are in error the entries need to be corrected before the operation can complete.
        /// </summary>
        public static string SourceContainsDataEntriesInError {
            get {
                return ResourceManager.GetString("SourceContainsDataEntriesInError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source contains errors. Operation has aborted.
        /// </summary>
        public static string SourceContainsError {
            get {
                return ResourceManager.GetString("SourceContainsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Source could not be found. Operation has aborted..
        /// </summary>
        public static string SourceNotFound {
            get {
                return ResourceManager.GetString("SourceNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The StartDate or EndDate for entry {0} is null. Operation has aborted..
        /// </summary>
        public static string StartDateEndDateNull {
            get {
                return ResourceManager.GetString("StartDateEndDateNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File unreadable.
        /// </summary>
        public static string UnReadableFile {
            get {
                return ResourceManager.GetString("UnReadableFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The username {0} was not found..
        /// </summary>
        public static string UserNameNotFound {
            get {
                return ResourceManager.GetString("UserNameNotFound", resourceCulture);
            }
        }
    }
}
